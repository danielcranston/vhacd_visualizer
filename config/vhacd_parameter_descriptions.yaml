-h:
    name: max_num_convex_hulls
    default: 32
    type: int
    description: Maximum number of output convex hulls. Default is 32
    integer_range: [1, 64, 1]
-r:
    name: voxel_resolution
    default: 100000
    type: int
    description: Total number of voxels to use. Default is 100,000
    integer_range: [100, 200000, 100]
-e:
    name: volume_error_percent
    default: 0.01
    type: double
    description: Volume error allowed as a percentage. Default is 1%. Valid range is 0.001 to 10
    floating_point_range: [0.001, 1.0, 0.001]
-d:
    name: max_recursion_depth
    default: 10
    type: int
    description: Maximum recursion depth. Default value is 10.
    integer_range: [1, 100, 1]
-s:
    name: shrinkwrap
    default: true
    type: bool
    description: Whether or not to shrinkwrap output to source mesh. Default is true.
-f:
    name: fill_mode
    default: flood
    type: string
    description: Fill mode. Default is 'flood', also 'surface' and 'raycast' are valid.
-v:
    name: max_vert_count
    default: 64
    type: int
    description: Maximum number of vertices in the output convex hull. Default value is 64
    integer_range: [8, 256, 1]
-a:
    name: asynchronous
    default: true
    type: bool
    description: Whether or not to run asynchronously. Default is 'true'
-l:
    name: min_edge_length
    default: 2
    type: int
    description: Minimum size of a voxel edge. Default value is 2 voxels.
    integer_range: [1, 8, 1]
-p:
    name: split_hulls_in_middle
    default: false
    type: bool
    description: If false, splits hulls in the middle. If true, tries to find optimal split plane location. False by default.
